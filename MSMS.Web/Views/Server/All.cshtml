@using MSMS.Core.Contracts

@model AllServersQueryModel
@inject IStatisticsService statisticsService

@{
    ViewBag.Title = "Servers";
}

@if (User.IsInRole(nameof(Role.Owner)))
{
    <a href="/Server/Create" class="btn-add">+</a>
}

<div class="container mt-5">
    @if (Model.Servers.Any() == false &&
        string.IsNullOrEmpty(Model.SearchItem))
    {
        <h1 class="display-2 text-center text-blocky">NO SERVER YET</h1>
        <h4 class="display-4 text-center text-blocky">YOU CAN CREATE ONE YOURSELF</h4>
    }
    else if (Model.Servers.Any() == false &&
    string.IsNullOrEmpty(Model.SearchItem) == false)
    {
        <h1 class="display-2 text-center text-blocky">NO SERVERS FOUND</h1>
    }
    else
    {
        <h1 class="display-2 text-center text-blocky">SERVERS</h1>

        <form method="get">
            <div class="d-flex justify-content-center">
                <div class="row">
                    <div class="form-group col">
                        <label asp-for="SearchItem"></label>
                        <input asp-for="SearchItem" class="form-control" placeholder="">
                    </div>
                    <div class="form-group col-md-3">
                        <div class="form-group">
                            <label asp-for="SortingType"></label>
                            <select asp-for="SortingType" class="form-control">
                                <option value="0">Newest</option>
                                <option value="1">Oldest</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group mt-4 p-2">
                            <input type="submit" value="Search" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            </div>
        </form>

        <div class="row m-2 mt-5">
            @foreach (var server in Model.Servers)
            {
                <partial name="_ServerPartial" model="@server" />
            }
        </div>

        var previousPage = Model.CurrentPage - 1;
        if (previousPage < 1)
        {
            previousPage = 1;
        }

        var maxPage = Math.Ceiling((double)Model.TotalServersCount / AllServersQueryModel.ServersPerPage);

        if (maxPage > 1)
        {
            <div class="row mb-5">
                <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
                    <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)" asp-controller="Server"
                        asp-action="All" asp-route-currentPage="@previousPage" asp-route-searchTerm="@Model.SearchItem"
                        asp-route-sortingType="@((int)Model.SortingType)">
                        PREVIOUS
                    </a>
                </div>

                @{
                    var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
                    !Model.Servers.Any();
                }

                <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
                    <a class="btn btn-primary 
                                            @(shouldButtonBeDisabled ? "disabled" : string.Empty)" asp-controller="Server"
                        asp-action="All" asp-route-currentPage="@(Model.CurrentPage + 1)"
                        asp-route-searchTerm="@Model.SearchItem" asp-route-sortingType="@((int)Model.SortingType)">
                        NEXT
                    </a>
                </div>
            </div>
        }
    }
</div>
